# -*- coding: utf-8 -*-
"""BDM_HW2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1g_twppabUDUxQgGZGJfBuvJ29IIb6T3s
"""

!pip install mrjob
!gdown --id '1sq4-zXn2Z82mdLSBBegEgsUsfqtgza-C' -O 'mapreduce.py'
!gdown --id '1-IeoZDwT5wQzBUpsaS5B6vTaP-2ZBkam' -O 'complaints.csv'

!head -n 10 complaints.csv

import csv
import mapreduce as mr
from mrjob.job import MRJob

class MRHW2(MRJob):

  def mapper(self, _, line):
    row = next(csv.reader([line]))
    if len(row) == 18 and len(row[0]) == 10 and row[0].replace('-','').isdigit():     # check 18 columns, length of first element = datetime, replace '-'
      year = row[0][:4]
      product = row[1].lower()
      company = row[7]
      yield ((year, product), company)

  def reducer(self, key, companies):      # generator, cannot iterate twice
    counts = {}
    for c in companies:                   # must have for loop for iteration
      counts[c] = counts.get(c, 0) + 1
    complaints = sum(counts.values())
    numCompanies = len(counts)
    percentage = int(max(counts.values()) * 100 / complaints + 0.5)
    yield (','.join(map(str, [*key, complaints, numCompanies, percentage])), '')

job = MRHW2(args = [])
with open('complaints.csv', 'r') as fi:
  output = list(mr.runJob(enumerate(map(lambda x: x.strip(), fi)), job))
print(len(output))
output

